<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airpremia.eosh.jobplan.repository.JobPlanRepository">
    <select id="selectJobPlanPage" resultType="JobPlanDto">
        SELECT job_seq
            ,job_classification_enum
            ,job_subject
            ,job_start_dt
            ,job_end_dt
            ,job_content
            ,work_equipment_content
            ,job_plan_perform_enum
            ,incharge_user_id
            ,incharge_user_name
            ,incharge_department_id
            ,incharge_department_name
        FROM job_plan
        <where>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty(searchDto.jobSubject)">
                 AND job_subject LIKE #{searchDto.jobSubject}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty(searchDto.jobClassificationEnum)">
                 AND job_classification_enum = #{searchDto.jobClassificationEnum}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty(searchDto.inchargeUserId)">
                 AND incharge_user_id = #{searchDto.inchargeUserId}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty(searchDto.inchargeDepartmentId)">
                 AND incharge_department_id = #{searchDto.inchargeDepartmentId}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty(searchDto.jobStartDt)">
                <![CDATA[AND job_start_dt >= #{searchDto.jobStartDt}]]>
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty(searchDto.jobEndDt)">
                <![CDATA[AND job_start_dt <= #{searchDto.jobEndDt}]]>
            </if>
        </where>
        ORDER BY insert_dtm DESC
    </select>
    <select id="selectJobPlan" resultType="JobPlanDto">
        SELECT t_mast.job_seq
          ,t_tbm.tool_box_meeting_seq
          ,t_mast.job_classification_enum
          ,t_mast.job_subject
          ,t_mast.job_start_dt
          ,t_mast.job_end_dt
          ,t_mast.job_content
          ,t_mast.work_equipment_content
          ,t_mast.job_plan_perform_enum
          ,t_mast.incharge_user_id
          ,t_mast.incharge_user_name
          ,t_mast.incharge_department_id
          ,t_mast.incharge_department_name
        FROM job_plan t_mast
        LEFT OUTER JOIN tool_box_meeting t_tbm
        ON t_mast.job_seq = t_tbm.job_seq
        <where>
            t_mast.job_seq = #{jobSeq}
        </where>
    </select>

    <insert id="insertJobPlan" useGeneratedKeys="true" keyProperty="jobSeq">
        INSERT INTO job_plan (
            job_seq
            ,job_classification_enum
            ,job_subject
            ,job_start_dt
            ,job_end_dt
            ,job_content
            ,work_equipment_content
            ,job_plan_perform_enum
            ,incharge_user_id
            ,incharge_user_name
            ,incharge_department_id
            ,incharge_department_name
            ,insert_user_id
            ,insert_ip
            )
        VALUES (
            #{jobSeq}
            ,#{jobClassificationEnum}
            ,#{jobSubject}
            ,#{jobStartDt}
            ,#{jobEndDt}
            ,#{jobContent}
            ,#{workEquipmentContent}
            ,#{jobPlanPerformEnum}
            ,#{inchargeUserId}
            ,#{inchargeUserName}
            ,#{inchargeDepartmentId}
            ,#{inchargeDepartmentName}
            ,#{insertUserId}
            ,#{insertIp}
            )
    </insert>

    <update id="updateJobPlan">
        UPDATE job_plan SET
            job_subject = #{jobSubject}
            ,job_start_dt = #{jobStartDt}
            ,job_end_dt = #{jobEndDt}
            ,job_content = #{jobContent}
            ,work_equipment_content = #{workEquipmentContent}
            ,job_plan_perform_enum = #{jobPlanPerformEnum}
            ,update_user_id = #{updateUserId}
            ,update_dtm = #{updateDtm}
            ,update_ip = #{updateIp}
        <where>
            job_seq = #{jobSeq}
        </where>
    </update>

    <delete id="deleteJobPlan">
        DELETE
        FROM job_plan
        <where>
            job_seq IN (
                <foreach collection="deleteSeqList" item="jobSeq" separator=",">
                    #{jobSeq}
                </foreach>
            )
        </where>
    </delete>
</mapper>
