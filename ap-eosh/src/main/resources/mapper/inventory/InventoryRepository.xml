<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airpremia.eosh.health.inventory.repository.InventoryRepository">
    <select id="selectInventoryPage" resultType="InventoryEntity">
        SELECT ivt.inventory_seq
            , ivt.division_code
            , ivt.classification_code AS classification_code_enum
            , ivt.serial_no
            , ivt.final_check_dt
            , ivt.registration_mark
            , ivt.message
            , ivt.quantity
            , ivt.carry_over_quantity
            , ivt.buy_quantity
            , ivt.health_manage_large_category
            , ivt.standard
            , ivt.insert_user_id
            , ivt.insert_dtm
            , ivt.insert_ip
            , ivt.update_user_id
            , ivt.update_dtm
            , ivt.update_ip
        FROM inventory AS ivt
        LEFT OUTER JOIN inventory_content ic
            ON (ic.inventory_seq = ivt.inventory_seq)
        <where>
            AND ivt.division_code = #{searchDto.divisionCode}
           <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.classificationCodeEnum )">
               AND ivt.classification_code = #{searchDto.classificationCodeEnum}
           </if>
           <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.registrationMark )">
               AND ivt.registration_mark = #{searchDto.registrationMark}
           </if>
           <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.serialNo )">
               AND ivt.serial_no LIKE #{searchDto.serialNo}
           </if>
           <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.healthManageLargeCategory )">
               AND ivt.health_manage_large_category LIKE #{searchDto.healthManageLargeCategory}
           </if>
           <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.standard )">
               AND ivt.standard = #{searchDto.standard}
           </if>
           <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.message )">
               AND ivt.message LIKE #{searchDto.message}
           </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.expirationStartDt )">
                AND ic.expiration_dt <![CDATA[>=]]> #{searchDto.expirationStartDt}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.expirationEndDt )">
                AND ic.expiration_dt <![CDATA[<=]]> #{searchDto.expirationEndDt}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.finalCheckStartDt )">
                AND ivt.final_check_dt <![CDATA[>=]]> #{searchDto.finalCheckStartDt}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.finalCheckEndDt )">
                AND ivt.final_check_dt <![CDATA[<=]]> #{searchDto.finalCheckEndDt}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.subClassificationCode )">
                AND ic.sub_classification_code = #{searchDto.subClassificationCode}
            </if>
            <if test="@com.airpremia.esmsfos.core.MybatisUtils@isNotEmpty( searchDto.quantity )">
                AND ic.quantity = #{searchDto.quantity}
            </if>
        </where>
        GROUP BY ivt.inventory_seq
        ORDER BY ivt.inventory_seq DESC
    </select>

    <select id="selectInventoryDetail" resultType="InventoryEntity">
        SELECT ivt.inventory_seq
           , ivt.division_code
           , ivt.classification_code AS classification_code_enum
           , ivt.serial_no
           , ivt.final_check_dt
           , ivt.registration_mark
           , ivt.message
           , ivt.quantity
           , ivt.carry_over_quantity
           , ivt.buy_quantity
           , ivt.health_manage_large_category
           , ivt.standard
           , ivt.insert_user_id
           , ivt.insert_dtm
           , ivt.insert_ip
           , ivt.update_user_id
           , ivt.update_dtm
           , ivt.update_ip
        FROM inventory AS ivt
        <where>
            AND ivt.inventory_seq = #{inventorySeq}
        </where>
    </select>

    <select id="selectSerialNoCount" resultType="int">
        SELECT COUNT(ivt.inventory_seq) AS serialNoCount
        FROM inventory AS ivt
        WHERE serial_no = #{serialNo}
    </select>

    <insert id="insertInventory" useGeneratedKeys="true" keyProperty="inventorySeq">
        INSERT INTO inventory (
            division_code
            , classification_code
            , serial_no
            , final_check_dt
            , registration_mark
            , message
            , quantity
            , carry_over_quantity
            , buy_quantity
            , health_manage_large_category
            , standard
            , insert_user_id
            , insert_dtm
            , insert_ip
            )
        VALUES (
            #{divisionCode}
            , #{classificationCodeEnum}
            , #{serialNo}
            , #{finalCheckDt}
            , #{registrationMark}
            , #{message}
            , #{quantity}
            , #{carryOverQuantity}
            , #{buyQuantity}
            , #{healthManageLargeCategory}
            , #{standard}
            , #{insertUserId}
            , #{insertDtm}
            , #{insertIp}
            )
    </insert>

    <update id="updateInventory">
        UPDATE inventory
        SET division_code = #{divisionCode}
            , classification_code = #{classificationCodeEnum}
            , serial_no = #{serialNo}
            , final_check_dt = #{finalCheckDt}
            , registration_mark = #{registrationMark}
            , message = #{message}
            , quantity = #{quantity}
            , carry_over_quantity = #{carryOverQuantity}
            , buy_quantity = #{buyQuantity}
            , health_manage_large_category = #{healthManageLargeCategory}
            , standard = #{standard}
            , update_user_id = #{updateUserId}
            , update_dtm = #{updateDtm}
            , update_ip = #{updateIp}
        <where>
            AND inventory_seq = #{inventorySeq}
        </where>
    </update>

    <delete id="deleteInventory">
        DELETE
        FROM inventory
        <where>
            AND inventory_seq = #{inventorySeq}
        </where>
    </delete>
</mapper>