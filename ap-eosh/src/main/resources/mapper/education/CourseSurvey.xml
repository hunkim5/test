<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airpremia.eosh.education.repository.CourseSurveyRepository">

    <select id="selectCourseSurvey" resultType="CourseSurveyDto">
        SELECT course_survey_seq
            ,education_attend_user_seq
            ,course_survey_question_detail_code
            ,education_seq
            ,course_survey_question_code
            ,question_answer
        FROM course_survey
        WHERE
            education_seq = #{educationSeq}
        AND education_attend_user_seq = #{educationAttendUserSeq}
    </select>

    <select id="selectCourseSurveyList" resultType="CourseSurveyDto">
        SELECT course_survey_seq
            ,education_attend_user_seq
            ,education_seq
            ,course_survey_question_code
            ,course_survey_question_detail_code
            ,question_answer
        FROM course_survey
        <where>
            AND education_attend_user_seq = #{educationAttendUserSeq}
        </where>
    </select>

    <insert id="insertCourseSurvey" useGeneratedKeys="true" keyProperty="courseSurveySeq">
        INSERT INTO course_survey(
            course_survey_question_code
            ,course_survey_question_detail_code
            ,education_attend_user_seq
            ,education_seq
            ,question_answer
            ,insert_ip
            ,insert_user_id
        ) VALUES
        <foreach collection="insertDtoList" item="item" separator=", ">
            (
                #{item.courseSurveyQuestionCode}
                ,#{item.courseSurveyQuestionDetailCode}
                ,#{item.educationAttendUserSeq}
                ,#{item.educationSeq}
                ,#{item.questionAnswer}
                ,#{item.insertIp}
                ,#{item.insertUserId}
            )
        </foreach>

    </insert>

    <update id="updateCourseSurvey">
        UPDATE course_survey SET
        course_survey_question_code = #{courseSurveyQuestionCode}
        ,course_survey_question_detail_code = #{courseSurveyQuestionDetailCode}
        ,question_answer = #{questionAnswer}
        ,update_ip = #{updateIp}
        ,update_dtm = #{updateDtm}
        ,update_user_id = #{updateUserId}
        <where>
            AND course_survey_seq = #{courseSurveySeq}
        </where>
    </update>

    <delete id="deleteCourseSurvey">
        DELETE
        FROM course_survey
        <where>
            AND education_seq = #{educationSeq}
            AND education_attend_user_seq = #{educationAttendUserSeq}
        </where>
    </delete>

    <select id="selectCourseSurveyCount" resultType="CourseEvalCountDto">
        SELECT education_seq
            , count(education_seq) AS course_eval_count
        FROM course_survey
        <where>
            AND education_seq IN
            <foreach item="educationSeq" collection="educationSeqs" open="(" separator="," close=")">
                #{educationSeq}
            </foreach>
        </where>
        GROUP BY education_seq
    </select>

    <delete id="deleteAllCourseSurvey">
        DELETE
        FROM course_survey
        <where>
            AND education_seq = #{educationSeq}
        </where>
    </delete>
</mapper>